{
    "totalRows": 9,
    "data": [
        {
            "trigger-type": "After Edit",
            "custom": "false",
            "flow": "[CUSTOM] Create Entry, Update Fields",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"inputs\": [\n        {\n            \"name\": \"createEntryRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"138255\"\n        },\n        {\n            \"name\": \"createEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let values = {}; let loadedEntries = context.metaData.loadedEntries; let entryDetails = context.metaData.triggerInputs.triggerEntryDetail; values.date = context.utils.moment().format('YYYY-MM-DD'); values['number-of-visits'] = entryDetails['number-of-visits']; values['visits-remaining'] = entryDetails['number-of-visits']; values['expiry-date'] = context.utils.moment().add(1, 'year').format('YYYY-MM-DD'); values['activity-type'] = entryDetails['activity-type']; values.member = entryDetails.member; values.transaction = JSON.stringify([ `${context.metaData.triggerInputs.entryId}`, ]); let member = loadedEntries.member[0]; values.name = entryDetails.name + '(' + entryDetails['number-of-visits'] + ')'; return values; }\"\n        },\n        {\n            \"name\": \"createEntryFormId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"138261\"\n        },\n        {\n            \"name\": \"updateEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let data = { '8165':true }; return data; }\"\n        }\n    ],\n    \"condition\": \"function(context){ try { console.log(JSON.stringify(context)); let fieldObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===8165); transactionTypeObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===7739); let voucherCreated = fieldObject.value; let transactionType = JSON.parse(transactionTypeObject.value)[0]; return !voucherCreated && transactionType==='134222'; } catch(e){ return false; }}\",\n    \"renderCondition\": \"function(context){ let field = context.record.fields.find(field => field.internalId === 'booking-type'); let formValue = context.formValues[field.id]; let transactionType = formValue.value; let field2 = context.record.fields.find(field => field.internalId === 'voucher-created'); let voucherCreatedValue = context.formValues[field2.id]; let voucherCreated = voucherCreatedValue.value; console.log(voucherCreated); return transactionType[0] === '134222' && !voucherCreated; }\",\n    \"loadEntries\": [\n        {\n            \"name\": \"member\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"member\"\n        }\n    ],\n    \"scheduled\": false,\n    \"addTriggerEntryDetail\": true,\n    \"triggerEntryDetailResponseType\": \"iov\",\n    \"redirectImmediately\": true,\n    \"redirectTo\": \"https://app.kalysys.com.au/app/records/138255/view/{{entryId}}\",\n    \"redirectParsers\": {\n        \"entryId\": {\n            \"type\": \"triggerResponse\",\n            \"value\": \"data.outputs[0].id\"\n        }\n    }\n}",
            "name": "Generate Voucher",
            "trigger-on-record": "neighbourhood-house-transactions",
            "recordValueId": 138262,
            "createdAt": "2021-07-12T12:22:58.775Z",
            "updatedAt": "2022-01-28T12:16:33.718Z",
            "autoId": "74",
            "autoIdNum": 74,
            "internalOwner": 131,
            "formId": 7664,
            "recordId": 7661
        },
        {
            "trigger-type": "[]",
            "custom": "false",
            "flow": "[CUSTOM] Create Entry, Update Fields",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"inputs\": [\n        {\n            \"name\": \"createEntryRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"132823\"\n        },\n        {\n            \"name\": \"createEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let values = {}; let loadedEntries = context.metaData.loadedEntries; console.log('lodaded', JSON.stringify(loadedEntries)); let entryDetails = context.metaData.triggerInputs.triggerEntryDetail; values.date = context.utils.moment.tz(loadedEntries.activity[0]['start-time'], 'Australia/Sydney').format('YYYY-MM-DD'); values.duration = loadedEntries.activity[0]['duration']; values.activity = entryDetails.activity; values.member = entryDetails.member; values.course=entryDetails.course; values['activity-type'] = entryDetails['activity-type']; values.transaction = JSON.stringify([ `${context.metaData.triggerInputs.entryId}`]); values['attendee-email'] = loadedEntries.member[0].email; values.status = JSON.stringify(['132839']); return values; }\"\n        },\n        {\n            \"name\": \"createEntryFormId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"138261\"\n        },\n        {\n            \"name\": \"updateEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let data = { '8203':true }; return data; }\"\n        }\n    ],\n    \"condition\": \"function(context){ try { console.log(JSON.stringify(context)); let fieldObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===8203); let doNotCreateAttendanceObj = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===9632);  transactionTypeObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===7739); let attendanceCreated = fieldObject.value; let doNotCreateAttendance = doNotCreateAttendanceObj.value; let transactionType = JSON.parse(transactionTypeObject.value)[0]; return !doNotCreateAttendance && !attendanceCreated && transactionType==='132966'; } catch(e){ return false; }}\",\n    \"renderCondition\": \"function(context){ let field = context.record.fields.find(field => field.internalId === 'booking-type'); let formValue = context.formValues[field.id]; let transactionType = formValue.value; let field2 = context.record.fields.find(field => field.internalId === 'attendance-created'); let attendanceCreatedValue = context.formValues[field2.id]; let attendanceCreated = attendanceCreatedValue.value; console.log(voucherCreated); return transactionType[0] === '132966' && !attendanceCreated; }\",\n    \"loadEntries\": [\n        {\n            \"name\": \"member\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"member\"\n        },\n        {\n            \"name\": \"activity\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"activity\"\n        }\n    ],\n    \"scheduled\": false,\n    \"addTriggerEntryDetail\": true,\n    \"triggerEntryDetailResponseType\": \"iov\",\n    \"redirectImmediately\": false,\n    \"redirectTo\": \"https://app.kalysys.com.au/app/records/138255/view/{{entryId}}\",\n    \"redirectParsers\": {\n        \"entryId\": {\n            \"type\": \"triggerResponse\",\n            \"value\": \"data.outputs[0].id\"\n        }\n    }\n}",
            "name": "[OLD] Generate Pay As You Go Attendance",
            "trigger-on-record": "neighbourhood-house-transactions",
            "recordValueId": 139273,
            "createdAt": "2021-07-15T06:09:26.034Z",
            "updatedAt": "2021-12-09T06:08:47.482Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        },
        {
            "trigger-type": "After Add",
            "custom": "false",
            "flow": "[CUSTOM] Neighbourhood House - Transaction - Create Course/Term Attendances",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"addTriggerEntryDetail\": true,\n    \"condition\": \"function(context){ const linkedEnrolmentValue = context.triggerInputs.data.formData.formValues.find(item => +item.fieldId === 13933);  const value = JSON.parse(linkedEnrolmentValue.value); if(value && value[0]) { return false; } return true; }\",\n    \"loadEntries\": [\n        {\n            \"name\": \"member\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"member\"\n        },\n        {\n            \"name\": \"activity\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"activity-type\"\n        }\n    ],\n    \"inputs\": []\n}",
            "name": "Generate Term Attendances",
            "trigger-on-record": "neighbourhood-house-transactions",
            "description": "<p><span style='color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgba(244, 245, 247, 0.19); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;'>Generate new attendance entries for the after_add of transaction entries.</span></p>",
            "recordValueId": 140506,
            "createdAt": "2021-07-19T03:01:15.676Z",
            "updatedAt": "2022-06-30T10:55:35.319Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        },
        {
            "trigger-type": "After Edit, Button",
            "custom": "false",
            "flow": "[GENERIC] Get Entries, Update Linked Entry",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"addTriggerEntryDetail\": true,\n    \"condition\": \"function(context){ return true; }\",\n    \"renderCondition\": \"function(context){ return true; }\",\n    \"triggerEntryDetailResponseType\": \"iov\",\n    \"loadEntries\": [\n      {\n        \"name\": \"grant\", \n        \"type\": \"trigger-entry\",\n        \"responseType\": \"iv\", \n        \"value\": \"grant\"\n      }\n    ],\n    \"inputs\": [\n        {\n            \"name\": \"getEntriesRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"132358\"\n        },\n        {\n            \"name\": \"getEntriesFilter\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ const grant = context.metaData.triggerInputs.triggerEntryDetail['grant'] && JSON.parse(context.metaData.triggerInputs.triggerEntryDetail['grant'])[0]; return [{'subject':8578,'type':'array','operator':'any_of','value':[`${grant}`]}]; }\"\n        },\n        {\n            \"name\": \"updateEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){  const grantObject = context.metaData.loadedEntries.grant; console.log(JSON.stringify(grantObject)); const amountRemaining = parseFloat(grantObject[0]['total-amount']); console.log(amountRemaining);  const _ = context.utils._; let output = context.state.outputs[0]; let total = _.sumBy(output, function(o) { return parseFloat(o.amount); }); return { 8600: total.toFixed(2), 8556: (amountRemaining - total).toFixed(2) } }\"\n        },\n        {\n            \"name\": \"updateEntryRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": 150849\n        },\n        {\n            \"name\": \"updateEntryEntryId\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ const _ = context.utils._; let grantId = JSON.parse(context.metaData.triggerInputs.triggerEntryDetail.grant)[0]; return grantId; }\"\n        }\n    ]\n}",
            "name": "Update Grant Remaining",
            "trigger-on-record": "neighbourhood-house-transactions",
            "recordValueId": 151683,
            "createdAt": "2021-08-07T00:45:10.455Z",
            "updatedAt": "2022-01-28T12:15:47.671Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        },
        {
            "trigger-type": "After Edit",
            "custom": "false",
            "flow": "[GENERIC] Update Entry",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"addTriggerEntryDetail\": true,\n    \"condition\": \"function(context){ try{ let fieldObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===8165); transactionTypeObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===7739); let transactionType = JSON.parse(transactionTypeObject.value)[0]; return transactionType==='149211'; } catch(e){ return false; }}\",\n    \"renderCondition\": \"function(context){ return true; }\",\n    \"triggerEntryDetailResponseType\": \"iov\",\n    \"loadEntries\": [],\n    \"inputs\": [\n        {\n            \"name\": \"updateEntryRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"132157\"\n        },\n        {\n            \"name\": \"updateEntryEntryId\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ const member = context.metaData.triggerInputs.triggerEntryDetail['member'] && JSON.parse(context.metaData.triggerInputs.triggerEntryDetail['member'])[0]; return member; }\"\n        },\n        {\n            \"name\": \"updateEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let expiryDate = context.metaData.triggerInputs.triggerEntryDetail['renewal-date']; let myDate = context.utils.moment(context.metaData.triggerInputs.triggerEntryDetail['renewal-date']).format('YYYY-MM-DD'); let values = { '8574' : myDate }; return values; }\"\n        }\n    ]\n}",
            "name": "Update Membership Expiry Date",
            "trigger-on-record": "neighbourhood-house-transactions",
            "recordValueId": 155410,
            "createdAt": "2021-08-15T10:49:18.319Z",
            "updatedAt": "2022-01-28T12:16:05.914Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        },
        {
            "trigger-type": "After Add, After Edit",
            "custom": "false",
            "flow": "[CUSTOM] Create Entry, Update Fields",
            "configuration": "{\n    \"bulkExecution\": false,\n    \"inputs\": [\n        {\n            \"name\": \"createEntryRecordId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"132823\"\n        },\n        {\n            \"name\": \"createEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let values = {}; let loadedEntries = context.metaData.loadedEntries; let entryDetails = context.metaData.triggerInputs.triggerEntryDetail; values.date = context.utils.moment.tz(loadedEntries.activity[0]['start-time'], 'Australia/Sydney').format('YYYY-MM-DD'); values.duration = loadedEntries.activity[0]['duration']; values.activity = entryDetails.activity; values.member = entryDetails.member; values.course=entryDetails.course; values['activity-type'] = entryDetails['activity-type']; values['voucher-used'] = entryDetails['voucher']; values.transaction = JSON.stringify([ `${context.metaData.triggerInputs.entryId}`]); values['attendee-email'] = loadedEntries.member[0].email; values.status = JSON.stringify(['132839']); values['voucher-updated'] = 'true'; return values; }\"\n        },\n        {\n            \"name\": \"createEntryFormId\",\n            \"type\": \"hard-coded\",\n            \"value\": \"138261\"\n        },\n        {\n            \"name\": \"updateEntryValues\",\n            \"type\": \"function\",\n            \"value\": \"function(context){ let data = { '8203':true }; return data; }\"\n        }\n    ],\n    \"condition\": \"function(context){ try {let fieldObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===8203); let doNotCreateAttendanceObj = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===9632);  transactionTypeObject = context.triggerInputs.data.formData.formValues.find(( {fieldId} ) => fieldId===7739); let attendanceCreated = fieldObject.value; let doNotCreateAttendance = doNotCreateAttendanceObj.value === 'true' || doNotCreateAttendanceObj.value === true; let transactionType = JSON.parse(transactionTypeObject.value)[0]; return !doNotCreateAttendance && !attendanceCreated && transactionType==='132966'; } catch(e){ return false; }}\",\n    \"renderCondition\": \"function(context){ let field = context.record.fields.find(field => field.internalId === 'booking-type'); let formValue = context.formValues[field.id]; let transactionType = formValue.value; let field2 = context.record.fields.find(field => field.internalId === 'attendance-created'); let attendanceCreatedValue = context.formValues[field2.id]; let attendanceCreated = attendanceCreatedValue.value;  return transactionType[0] === '132966' && !attendanceCreated; }\",\n    \"loadEntries\": [\n        {\n            \"name\": \"member\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"member\"\n        },\n        {\n            \"name\": \"activity\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"activity\"\n        },\n           {\n            \"name\": \"voucherUsed\",\n            \"type\": \"trigger-entry\",\n            \"responseType\": \"iv\",\n            \"value\": \"voucher\"\n        }\n    ],\n    \"scheduled\": false,\n    \"addTriggerEntryDetail\": true,\n    \"triggerEntryDetailResponseType\": \"iov\",\n    \"redirectImmediately\": false,\n    \"redirectTo\": \"https://app.kalysys.com.au/app/records/138255/view/{{entryId}}\",\n    \"redirectParsers\": {\n        \"entryId\": {\n            \"type\": \"triggerResponse\",\n            \"value\": \"data.outputs[0].id\"\n        }\n    }\n}",
            "name": "Generate Pay As You Go Attendance",
            "title": "Generate Pay As You Go Attendance",
            "trigger-on-record": "neighbourhood-house-transactions",
            "description": "<p>Generate Pay As You Go Attendance</p>",
            "recordValueId": 257354,
            "createdAt": "2021-12-06T08:08:59.920Z",
            "updatedAt": "2022-04-13T06:11:17.777Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        },
        {
            "trigger-type": "After Add, After Edit, Before Delete, Button",
            "custom": "false",
            "flow": "[CUSTOM] Neighbourhood Houses - Calculate the sum of all associated transactions.amount and update grants.amount-used-hrs",
            "configuration": "{\r\n    \"inputs\": [],\r\n    \"addTriggerEntryDetail\":true\r\n}",
            "name": "Calculate the sum of Transactions Amount ($)",
            "title": "",
            "trigger-on-record": "neighbourhood-house-transactions",
            "description": "<p>Calculate the sum of all associated transactions.amount and update grants.amount-used-hrs</p>",
            "recordValueId": 565777,
            "createdAt": "2022-03-29T08:14:08.725Z",
            "updatedAt": "2022-03-29T08:38:52.130Z",
            "autoId": "92",
            "autoIdNum": 92,
            "internalOwner": 131,
            "formId": 7664,
            "recordId": 7661
        },
        {
            "trigger-type": "After Add",
            "custom": "false",
            "flow": "[CUSTOM] Neighbourhood House - Course/Program/Session - Update Remaining Capacity",
            "configuration": "{\n    \"inputs\": [],\n    \"addTriggerEntryDetail\": true,\n    \"condition\": \"function(context){ const linkedEnrolmentValue = context.triggerInputs.data.formData.formValues.find(item => +item.fieldId === 13933);  const value = JSON.parse(linkedEnrolmentValue.value); if(value && value[0]) { return false; } return true; }\"\n}",
            "name": "Update Remaining Capacity",
            "title": "",
            "trigger-on-record": "neighbourhood-house-transactions",
            "description": "<p>It updates the remaining capacity count <span style=\"color: rgb(65, 65, 65); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">when a new transaction entry is added</span> according to its associated record (Course || Program || Session).</p>",
            "recordValueId": 573879,
            "createdAt": "2022-04-06T18:08:02.176Z",
            "updatedAt": "2022-06-30T12:53:59.299Z",
            "autoId": "93",
            "autoIdNum": 93,
            "internalOwner": 131,
            "formId": 7664,
            "recordId": 7661
        },
        {
            "trigger-type": "After Add, After Edit",
            "custom": "false",
            "flow": "[NH] Calculate amount remaining for linked enrolment ",
            "configuration": "{\n    \"inputs\": [],\n    \"addTriggerEntryDetail\": true,\n    \"condition\": \"function(context){return true;}\"\n}",
            "name": "Calculate amount remaining for linked enrolment",
            "title": "",
            "trigger-on-record": "neighbourhood-house-transactions",
            "description": "<p>Calculate amount remaining for linked enrolment</p>",
            "recordValueId": 679771,
            "createdAt": "2022-06-30T12:59:49.294Z",
            "updatedAt": "2022-07-03T02:21:35.562Z",
            "autoId": null,
            "autoIdNum": null,
            "internalOwner": 131,
            "formId": -1,
            "recordId": 7661
        }
    ]
}